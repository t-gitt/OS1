// Screen size
screen.w = Window.GetWidth();
screen.h = Window.GetHeight();
screen.half.w = Window.GetWidth() / 2;
screen.half.h = Window.GetHeight() / 2;

// Question prompt
question = null;
answer = null;

// Message
message = null;

// Password prompt
bullets = null;
prompt = null;
bullet.image = Image.Text("*", 1, 1, 1);

// Flow
state.status = "play";
state.time = 0.0;

//--------------------------------- Refresh (Logo animation) --------------------------

// cycle through all images

progress = 0;
last_frame_index = 0;
pressed_once = 0;
final_progress = 0;
files_count = 372;
for (i = 0; i < files_count; i++)
  loading_image[i] = Image("image-" + i + ".png");

// set sprites size
loading_sprite = Sprite();
loading_sprite.SetX(Window.GetX() + (Window.GetWidth() / 2 - loading_image[0].GetWidth() / 2));
loading_sprite.SetY(Window.GetY() + (Window.GetHeight() / 2 - loading_image[0].GetHeight() / 2));

// set background size
background_image = Image("background.png");
background_sprite = Sprite();
background_sprite.SetX(Window.GetX() + (Window.GetWidth() / 2 - background_image.GetWidth() / 2));
background_sprite.SetY(Window.GetY() + (Window.GetHeight() / 2 - background_image.GetHeight() / 2));
background_sprite.SetZ (-10);
background_sprite.SetImage(background_image);

//--------------------------------- Set Refresh - passwordless boot --------------------------

//---------------------------------  for passwordless boot --------------------------

fun refresh_callback ()
  {
    if (progress < files_count) 
    {
        loading_sprite.SetImage(loading_image[progress]);
        progress++;
    }

  }

//---------------------------------  for passowrd boot --------------------------

fun refresh_callback_with_password ()
  {
    if (progress >= 0) 
	{
	    last_frame_index = Math.Int(progress) % 177;
	    loading_sprite.SetImage(loading_image[last_frame_index]);
	    progress++;
	}
    if (progress < 0)
	{
		if (pressed_once == 1)
		{
		    if (last_frame_index < (files_count))
		    {
          loading_sprite.SetImage(loading_image[Math.Int(last_frame_index)]);
          last_frame_index++;
		    }
		}
	}

  }
  
Plymouth.SetRefreshFunction (refresh_callback_with_password);

//--------------------------------- Key Input (Animation) - can be ignored for passwordless boot --------------------------

key_press = 0;

fun keyInput_callback (k)
  {
	key_press++;
	if (key_press == 1)
	{
		pressed_once = 1;
		progress = -1;
		if (last_frame_index > 0 )
			final_progress = last_frame_index;
	}

  }

Plymouth.SetKeyboardInputFunction (keyInput_callback);

//------------------------------------- Password prompt -------------------------------
fun DisplayQuestionCallback(prompt, entry) {
    question = null;
    answer = null;

    if (entry == "")
        entry = "<answer>";

    question.image = Image.Text(prompt, 1, 1, 1);
    question.sprite = Sprite(question.image);
    question.sprite.SetX(screen.half.w - question.image.GetWidth() / 2);
    question.sprite.SetY(screen.h - 4 * question.image.GetHeight());

    answer.image = Image.Text(entry, 1, 1, 1);
    answer.sprite = Sprite(answer.image);
    answer.sprite.SetX(screen.half.w - answer.image.GetWidth() / 2);
    answer.sprite.SetY(screen.h - 2 * answer.image.GetHeight());
}
Plymouth.SetDisplayQuestionFunction(DisplayQuestionCallback);

//------------------------------------- Password prompt -------------------------------
fun DisplayPasswordCallback(nil, bulletCount) {
    state.status = "pause";
    totalWidth = bulletCount * bullet.image.GetWidth();
    startPos = screen.half.w - totalWidth / 2;

    prompt.image = Image.Text("Enter Password", 1, 1, 1);
    prompt.sprite = Sprite(prompt.image);
    prompt.sprite.SetX(screen.half.w - prompt.image.GetWidth() / 2);
    prompt.sprite.SetY(screen.h - 4 * prompt.image.GetHeight());

    // Clear all bullets (user might hit backspace)
    bullets = null;
    for (i = 0; i < bulletCount; i++) {
        bullets[i].sprite = Sprite(bullet.image);
        bullets[i].sprite.SetX(startPos + i * bullet.image.GetWidth());
        bullets[i].sprite.SetY(screen.h - 2 * bullet.image.GetHeight());
    }
}
Plymouth.SetDisplayPasswordFunction(DisplayPasswordCallback);

//--------------------------- Normal display (unset all text) ----------------------
fun DisplayNormalCallback() {
    state.status = "play";
    bullets = null;
    prompt = null;
    message = null;
    question = null;
    answer = null;
}
Plymouth.SetDisplayNormalFunction(DisplayNormalCallback);

//----------------------------------------- Message --------------------------------
fun MessageCallback(text) {
    message.image = Image.Text(text, 1, 1, 1);
    message.sprite = Sprite(message.image);
    message.sprite.SetPosition(screen.half.w - message.image.GetWidth() / 2, message.image.GetHeight());
}
Plymouth.SetMessageFunction(MessageCallback);

